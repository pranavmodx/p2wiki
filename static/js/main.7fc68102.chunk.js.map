{"version":3,"sources":["components/p2p.js","components/Search.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Discovery","require","randombytes","WebTorrent","announce","window","location","hostname","msgBindCallback","type","msg","localStorage","getItem","client","f","File","seed","torrent","console","log","infoHash","on","peer","data","toString","send","j","JSON","parse","axios","get","q","then","res","stringify","catch","err","alert","e","removePeer","id","peers","bestPeers","indexOf","Object","keys","length","discovery","peerId","source","undefined","push","splice","setTimeout","t","connected","messagePeer","Promise","resolve","reject","json","Error","Searchbar","props","retryInterval","getFromWiki","state","query","that","setState","title","result","text","clearInterval","handleSubmit","preventDefault","handleChange","bind","beAProxy","spli","document","pathname","split","urloli","value","target","checked","this","name","setItem","reload","html","onSubmit","className","onChange","style","marginLeft","placeholder","dangerouslySetInnerHTML","__html","React","Component","Main","textAlign","color","fontSize","Search","App","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yoBAEMA,EAAYC,EAAQ,IACpBC,EAAcD,EAAQ,IACtBE,EAAaF,EAAQ,KAEvBG,EAAW,CACb,sBACA,mCACA,yCACA,4CAG+B,cAA7BC,OAAOC,SAASC,WAClBH,EAAW,CAAC,wBAEd,IACII,EAAkB,SAACC,EAAMC,KAE7B,GAAyC,SAArCC,aAAaC,QAAQ,YAAwB,CAI/C,IAAIC,EAAS,IAAIV,EAEbW,EAAI,IAAIC,KAAK,CAAC,UAAW,UAE7BF,EAAOG,KAAKF,EAAG,CACbV,SAAUA,IACT,SAACa,GAEFC,QAAQC,IAAIF,EAAQG,UAEpBH,EAAQI,GAAG,QAAQ,SAACC,GAClBA,EAAKD,GAAG,QAAQ,SAAAE,GAEdL,QAAQC,IAAI,gCAAkCI,GAEtB,MAApBA,EAAKC,YACPF,EAAKG,KAAK,KAEZ,IACE,IAAIC,EAAIC,KAAKC,MAAML,GACnBM,IAAMC,IAAN,qEAAwEJ,EAAEK,EAA1E,wCAAkHC,MAAK,SAAAC,GACrHf,QAAQC,IAAIc,GACZX,EAAKG,KAAKE,KAAKO,UAAUD,OACxBE,OAAM,SAACC,GACRlB,QAAQC,IAAIiB,GACZC,MAAM,gDAER,MAAOC,kBAIV,KAIIC,EAAT,SAAoBC,UACXC,EAAMD,UACNE,EAAUA,EAAUC,QAAQH,IACnChC,EAAgB,aAAcoC,OAAOC,KAAKJ,GAAOK,SAN/CL,EAAQ,GACRC,EAAY,GAcZK,EAAY,IAAI/C,EANE,CACpBoB,SAjDa,2CAkDb4B,OAAQ9C,EAAY,IACpBE,SAAUA,IAIZ2C,EAAU1B,GAAG,QAAQ,SAACC,EAAM2B,GAC1B3B,EAAKD,GAAG,WAAW,WACjBC,EAAKD,GAAG,QAAQ,SAACE,GACfL,QAAQC,IAAI,+BAAiCI,GAGrB,MAApBA,EAAKC,kBACgB0B,IAAnBT,EAAMnB,EAAKkB,MACbC,EAAMnB,EAAKkB,IAAMlB,EACjBoB,EAAUS,KAAK7B,EAAKkB,IAEpBhC,EAAgB,aAAcoC,OAAOC,KAAKJ,GAAOK,SAKnDJ,EAAUS,KAAKT,EAAUU,OAAOV,EAAUC,QAAQrB,EAAKkB,IAAK,GAAG,QAenEa,YARQ,SAAJC,IACGhC,EAAKiC,WAGRjC,EAAKG,KAAK,KACV4B,WAAWC,EAAG,MAHdf,EAAWjB,EAAKkB,MAMN,QAGhBlB,EAAKD,GAAG,SAAS,WACfkB,EAAWjB,EAAKkB,UAIpBO,EAAU1B,GAAG,SAAS,SAAAe,GACpBlB,QAAQC,IAAIiB,MAchB,SAASoB,EAAa9C,GACpB,OAAO,IAAI+C,SAAQ,SAAUC,EAASC,GACpC,IAAIrC,EARc,IAFTsB,OAAOC,KAAKJ,GAEdK,QAGFL,EAAMC,EAAUA,EAAUI,OAAS,IAOnCxB,GAIHA,EAAKD,GAAG,QAAQ,SAAAE,GACd,IACE,IAAIqC,EAAOjC,KAAKC,MAAML,GACtBmC,EAAQE,GACR,MAAOtB,QAGXhB,EAAKG,KAAKf,GAEVY,EAAKD,GAAG,SAAS,SAAAe,GACf5B,EAAgB,SAAU,0BAC1BmD,EAAOE,MAAMzB,SAdf5B,EAAgB,SAAU,sBAC1BmD,EAAO,c,ICFEG,E,kDAvHb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAHRC,cAAgB,KAEG,EA+BnBC,YAAc,WACZ,GAAyB,KAArB,EAAKC,MAAMC,MAAc,CAC3B,IAAIC,EAAI,gBD2GkBrC,EC1GX,EAAKmC,MAAMC,MD2GvBX,EACL7B,KAAKO,UAAU,CAAEH,EAAGA,MC5GeC,MAAK,SAAUC,GAC9CmC,EAAKC,SAAS,CACZC,MAAOrC,EAAIV,KAAKK,MAAM0C,MACtBC,OAAQtC,EAAIV,KAAKK,MAAM4C,UAExBrC,OAAM,SAACC,GACI,WAARA,IACFlB,QAAQC,IAAI,iCACZsD,cAAcL,EAAKJ,eACnBI,EAAKJ,cAAgBX,WAAWe,EAAKH,YAAa,SDiGrD,IAAyBlC,GC5IX,EAiDnB2C,aAAe,SAACpC,GACdA,EAAEqC,iBACFzD,QAAQC,IAAI,EAAK+C,MAAMC,OAEvB,EAAKF,eAnDL,EAAKW,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKH,aAAe,EAAKA,aAAaG,KAAlB,gBACpB,EAAKX,MAAQ,CACXI,MAAO,GACPH,MAAO,GACPI,OAAQ,GACRO,UAAU,GAG6B,SAArCnE,aAAaC,QAAQ,cACvB,EAAKsD,MAAMY,UAAW,GAGxB,IAAIV,EAAI,eAEJW,EADMC,SAAS1E,SAAS2E,SACbC,MAAM,KAjBJ,OAmBbH,EAAKjC,OAAS,GAA+B,SAA1BiC,EAAKA,EAAKjC,OAAS,IACxCO,YAAW,WACTe,EAAKe,OAAOJ,EAAKA,EAAKjC,OAAS,IAC/BsB,EAAKH,gBACJ,KD4HPzD,ECzHU,SAACC,EAAMC,GACbQ,QAAQC,IAAIV,EAAMC,IA3BH,E,yDA+DN4B,GACX,IAAM8C,EACc,aAAlB9C,EAAE+C,OAAO5E,KAAsB6B,EAAE+C,OAAOC,QAAUhD,EAAE+C,OAAOD,MAC7DG,KAAKlB,SAAL,eACG/B,EAAE+C,OAAOG,KAAOJ,IAGG,aAAlB9C,EAAE+C,OAAOG,OACX7E,aAAa8E,QAAQ,WAAYL,GACjC/E,OAAOC,SAASoF,Y,6BAGbpD,GACLiD,KAAKlB,SAAS,CACZF,MAAO7B,M,+BAIT,IAAoBqD,EAIpB,OACE,6BACE,0BAAMC,SAAUL,KAAKb,cACnB,2BAAOmB,UAAU,YACf,2BACEpF,KAAK,WACLqF,SAAUP,KAAKX,aACfY,KAAK,WACLF,QAASC,KAAKrB,MAAMY,WAEtB,0BAAMiB,MAAO,CAACC,WAAY,QAA1B,oBAEF,yBAAKH,UAAU,SACb,yBAAKA,UAAU,WACb,2BACEA,UAAU,mBACVrD,GAAG,QACH/B,KAAK,OACLwF,YAAY,qCACZH,SAAUP,KAAKX,aACfY,KAAK,QACLJ,MAAOG,KAAKrB,MAAMC,WAK1B,yBAAK0B,UAAU,qBACb,wBAAIA,UAAU,kBAAkBN,KAAKrB,MAAMI,OAC3C,yBAAK4B,yBAhCSP,EAgC6BJ,KAAKrB,MAAMK,OA9BnD,CAAE4B,OAAQR,Y,GAtFCS,IAAMC,WCkBfC,G,8KAlBX,OACE,oCACE,yBAAKP,MAAO,CAACQ,UAAW,WACtB,wBAAIR,MAAO,CAACS,MAAM,YAAaC,SAAU,SAAzC,UACA,kBAACC,EAAD,OAEF,4BAAQb,UAAU,UAChB,yBAAKE,MAAO,CAACQ,UAAW,WACtB,uBAAGR,MAAO,CAACS,MAAM,YAAjB,2E,GAVOH,cCSJM,MARf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,QCGce,QACW,cAA7BvG,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASsG,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS/B,SAASgC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnF,MAAK,SAAAoF,GACjCA,EAAaC,iB","file":"static/js/main.7fc68102.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst Discovery = require('torrent-discovery')\nconst randombytes = require('randombytes')\nconst WebTorrent = require('webtorrent')\n\nvar announce = [\n  'ws://localhost:5000',\n  'wss://tracker.openwebtorrent.com',\n  'wss://tracker.sloppyta.co:443/announce',\n  'wss://tracker.novage.com.ua:443/announce',\n]\n\nif (window.location.hostname === 'localhost')\n  announce = ['ws://localhost:5000']\n\nconst infoHash = '62f753362edbfcc2f59593a050bf271d20dec9d2'\nvar msgBindCallback = (type, msg) => {};\n\nif (localStorage.getItem('beAProxy') === \"true\") {\n  // Proxy\n\n  // Seed the torrent\n  var client = new WebTorrent()\n\n  var f = new File(['p2wiki'], 'p2wiki')\n\n  client.seed(f, {\n    announce: announce\n  }, (torrent) => {\n    // Will be 62f753362edbfcc2f59593a050bf271d20dec9d2\n    console.log(torrent.infoHash)\n\n    torrent.on('peer', (peer) => {\n      peer.on('data', data => {\n        // got a data channel message\n        console.log('got a message from a client: ' + data)\n\n        if (data.toString() === 'p')\n          peer.send('p') // Pong\n\n        try {\n          var j = JSON.parse(data)\n          axios.get(`//en.wikipedia.org/w/api.php?action=parse&format=json&page=${j.q}&prop=text&formatversion=2&origin=*`).then(res => {\n            console.log(res)\n            peer.send(JSON.stringify(res))\n          }).catch((err) => {\n            console.log(err)\n            alert('Not Found- Try with a more Specific Title')\n          })\n        } catch (e) {}\n      })\n    })\n  })\n} else {\n  var peers = {},\n      bestPeers = [] // The last elem will have the last msged peer id\n  \n  function removePeer(id) {\n    delete peers[id]\n    delete bestPeers[bestPeers.indexOf(id)]\n    msgBindCallback('peersCount', Object.keys(peers).length)\n  }\n\n  const discoveryOpts = {\n    infoHash: infoHash,\n    peerId: randombytes(20),\n    announce: announce\n  }\n\n  var discovery = new Discovery(discoveryOpts)\n  discovery.on('peer', (peer, source) => {\n    peer.on('connect', () => {\n      peer.on('data', (data) => {\n        console.log('got a message from a proxy: ' + data)\n\n        // Acknowledge pong\n        if (data.toString() === 'p') {\n          if (peers[peer.id] === undefined) {\n            peers[peer.id] = peer\n            bestPeers.push(peer.id)\n\n            msgBindCallback('peersCount', Object.keys(peers).length)\n          }\n\n          // Move this \"active\" peer to last of array\n          // https://stackoverflow.com/a/24909567\n          bestPeers.push(bestPeers.splice(bestPeers.indexOf(peer.id), 1)[0])\n        }\n      })\n\n      /**\n       * Keep pinging\n       */\n      var t = () => {\n        if (!peer.connected) {\n          removePeer(peer.id)\n        } else {\n          peer.send('p') // A ping msg\n          setTimeout(t, 1000)\n        }\n      }\n      setTimeout(t, 1000)\n    })\n\n    peer.on('close', () => {\n      removePeer(peer.id)\n    })\n  })\n\n  discovery.on('error', err => {\n    console.log(err)\n  })\n}\n\n// Get the best peer\nfunction getAPeer() {\n  var keys = Object.keys(peers)\n\n  if (keys.length === 0)\n    return false\n\n  return peers[bestPeers[bestPeers.length - 1]]\n}\n\nfunction messagePeer (msg) {\n  return new Promise(function (resolve, reject) {\n    var peer = getAPeer()\n\n    if (!peer) {\n      msgBindCallback('search', 'No peers available')\n      reject('nopeer')\n    } else {\n      peer.on('data', data => {\n        try {\n          var json = JSON.parse(data)\n          resolve(json)\n        } catch (e) {}\n      })\n      \n      peer.send(msg)\n\n      peer.on('error', err => {\n        msgBindCallback('search', 'Peer connection failed')\n        reject(Error(err))\n      })\n    }\n  })\n}\n\nexport function requestArticle (q) {\n  return messagePeer(\n    JSON.stringify({ q: q })\n  )\n}\n\nexport function msgBind (callback) {\n  msgBindCallback = callback\n}","import React from \"react\";\n//import axios from 'axios';\n//import { Label } from \"@rebass/forms\";\n//import { Box, Button } from \"rebass\"\nimport { requestArticle, msgBind } from \"./p2p\";\n\n// class Searchbar = (props) => {\nclass Searchbar extends React.Component {\n  retryInterval = null\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      title: \"\",\n      query: \"\",\n      result: \"\",\n      beAProxy: false,\n    };\n\n    if (localStorage.getItem(\"beAProxy\") === \"true\") {\n      this.state.beAProxy = true;\n    }\n\n    var that = this,\n        url = document.location.pathname,\n        spli = url.split(\"/\");\n\n    if (spli.length > 2 && spli[spli.length - 2] === 'wiki') {\n      setTimeout(function () {\n        that.urloli(spli[spli.length - 1]);\n        that.getFromWiki();\n      }, 1000);\n    }\n\n    msgBind((type, msg) => {\n      console.log(type, msg)\n    })\n  }\n\n  getFromWiki = () => {\n    if (this.state.query !== \"\") {\n      var that = this;\n      requestArticle(this.state.query).then(function (res) {\n        that.setState({\n          title: res.data.parse.title,\n          result: res.data.parse.text,\n        })\n      }).catch((err) => {\n        if (err === 'nopeer') {\n          console.log('nopeer, retrying in 3 seconds')\n          clearInterval(that.retryInterval)\n          that.retryInterval = setTimeout(that.getFromWiki, 3000)\n        }\n      })\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state.query);\n\n    this.getFromWiki();\n    /**\n        axios.get(`http://en.wikipedia.org/w/api.php?action=parse&format=json&page=${this.state.query}&prop=query&formatversion=2`).then(res => {\n            console.log(res.data)\n            this.setState({\n                title: res.data.parse.title,\n                result: res.data.parse.query,\n            });\n        }).catch((err)=>{alert(\"Not Found- Try with a more Specific Title\")});*/\n  };\n  handleChange(e) {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    this.setState({\n      [e.target.name]: value,\n    });\n\n    if (e.target.name === \"beAProxy\") {\n      localStorage.setItem(\"beAProxy\", value);\n      window.location.reload();\n    }\n  }\n  urloli(e) {\n    this.setState({\n      query: e,\n    });\n  }\n  render() {\n    let createMarkup = (html) => {\n      //console.log(query)\n      return { __html: html };\n    };\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              onChange={this.handleChange}\n              name=\"beAProxy\"\n              checked={this.state.beAProxy}\n            />\n            <span style={{marginLeft: '5px'}}>Be a Proxy Peer</span>\n          </label>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input is-rounded\"\n                id=\"query\"\n                type=\"Text\"\n                placeholder=\"🔍 Search for an article\"\n                onChange={this.handleChange}\n                name=\"query\"\n                value={this.state.query}\n              />\n            </div>\n          </div>\n        </form>\n        <div className=\"container mx-auto\">\n          <h1 className=\"title text-4xl\">{this.state.title}</h1>\n          <div dangerouslySetInnerHTML={createMarkup(this.state.result)} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Searchbar;\n","import React, {Component} from 'react';\nimport Searchbar from './Search';\n\nimport './Main.scss';\n\nclass Main extends Component {\n  render() {\n    return (\n      <>\n        <div style={{textAlign: 'center'}}>\n          <h1 style={{color:`royalblue`, fontSize: '50px'}}>P2Wiki</h1>\n          <Searchbar/>\n        </div>\n        <footer className=\"footer\">\n          <div style={{textAlign: 'center'}}>\n            <p style={{color:`hotpink`}}>\n              P2Wiki made by Subin Siby, Pranav Shridhar and Athul Cyriac Ajay\n            </p>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\nimport './App.scss';\n\nimport Main from './components/Main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}